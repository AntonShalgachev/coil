#pragma once

// Generated with seed '88005553556'

#include "../../Common.h"

#include "Class16.h"
#include "Class18.h"
#include "Class24.h"
#include "Class28.h"
#include "Class29.h"
#include "Class30.h"
#include "Class31.h"
#include "Class34.h"
#include "Class43.h"
#include "Class44.h"
#include "Class45.h"
#include "Class49.h"
#include "Class57.h"
#include "Class58.h"
#include "Class74.h"
#include "Class78.h"
#include "Class80.h"
#include "Class88.h"
#include "Class93.h"
#include "Class96.h"

class Class21
{
public:
    void work();

#ifdef DEBUG_BINDINGS
    void registerBindings(GeneralBindings& bindings);
#endif

    static std::optional<float> workInternally(std::vector<std::string> const& values);

private:
    bool method0(bool arg0, unsigned arg1, short arg2, bool arg3, double arg4);
    void method1(unsigned arg0, int arg1, bool arg2, short arg3, unsigned arg4);
    void method2(double arg0, float arg1, double arg2, double arg3, unsigned arg4);
    short method3(short arg0, double arg1, short arg2, int arg3, short arg4);
    void method4(bool arg0, bool arg1, double arg2, double arg3, float arg4);
    bool method5(short arg0, bool arg1, int arg2, float arg3, bool arg4);
    float method6(unsigned arg0, bool arg1, float arg2, int arg3, short arg4);
    bool method7(bool arg0, unsigned arg1, double arg2, float arg3, bool arg4);
    float method8(float arg0, float arg1, double arg2, unsigned arg3, short arg4);
    void method9(bool arg0, short arg1, bool arg2, double arg3, float arg4);
    void method10(float arg0, double arg1, double arg2, float arg3, int arg4);
    int method11(double arg0, bool arg1, int arg2, double arg3, unsigned arg4);
    bool method12(float arg0, bool arg1, double arg2, bool arg3, unsigned arg4);
    unsigned method13(float arg0, short arg1, short arg2, unsigned arg3, double arg4);
    void method14(double arg0, short arg1, short arg2, int arg3, short arg4);

    static void function0(float arg0, float arg1, double arg2, double arg3, unsigned arg4);
    static bool function1(bool arg0, int arg1, short arg2, int arg3, bool arg4);
    static bool function2(bool arg0, short arg1, short arg2, float arg3, double arg4);
    static void function3(short arg0, bool arg1, short arg2, float arg3, short arg4);
    static float function4(double arg0, unsigned arg1, short arg2, unsigned arg3, float arg4);
    static void function5(unsigned arg0, short arg1, unsigned arg2, unsigned arg3, bool arg4);
    static int function6(int arg0, double arg1, int arg2, float arg3, short arg4);
    static void function7(bool arg0, unsigned arg1, bool arg2, int arg3, unsigned arg4);
    static void function8(short arg0, float arg1, bool arg2, float arg3, float arg4);
    static void function9(unsigned arg0, int arg1, float arg2, bool arg3, bool arg4);
    static int function10(unsigned arg0, int arg1, short arg2, float arg3, int arg4);
    static void function11(int arg0, unsigned arg1, int arg2, short arg3, unsigned arg4);
    static double function12(bool arg0, unsigned arg1, bool arg2, double arg3, float arg4);
    static int function13(bool arg0, float arg1, bool arg2, int arg3, unsigned arg4);
    static unsigned function14(double arg0, bool arg1, bool arg2, unsigned arg3, bool arg4);
};
